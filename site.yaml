---
- hosts: all
  gather_facts: yes
  become: yes

  tasks:
    - name: apt update
      apt:
        update_cache: true


- name: Configuring the HAproxy loadbalancer
  hosts: HAproxy
  become: yes
  vars:
      ui_pass: "{{ lookup('file', './uipassword') }}"
  tasks:


    - name: Installing HAproxy
      apt:

        name: haproxy
        state: present
        update_cache: true


    - name: gather server ip addresses
      setup:
            filter: ansible_default_ipv4.address


    - name: copy files haproxy.cfg
      template:
        src: haproxy.cfg.j2
        dest: "/etc/haproxy/haproxy.cfg"


    - name: restart haproxy
      service:
         name: haproxy
         state: restarted

    - name: install nginx, snmp, snmp-mibs-downloader
      apt:
        update_cache: yes
        name: [ 'nginx', 'snmp', 'snmp-mibs-downloader' ]
        state: latest


    - name: copy snmp conf file
      template:
            src: snmp.conf
            dest: "/etc/snmp/snmp.conf"

    - name: copy nginx config files
      template:
         src: nginx.conf.j2
         dest: "/etc/nginx/nginx.conf"

    - name: nginx start
      service:
        name: nginx
        state: restarted



- hosts: webservers
  become: yes
  tasks:

    - name: Install snmpd
      apt:
        name: snmpd
        state: latest

    - name: Copy snmpd conf file
      template:
        src: snmpd.conf.j2
        dest: "/etc/snmp/snmpd.conf"

    - name: Run snmpd
      service:
        name: snmpd
        state: restarted


    - name: Install pip
      apt:
        name: python3-pip
        state: latest

    - name: Install Python3
      apt:
        name: python3
        state: latest

    - name: Install Flask
      pip:
        name:
          - flask
        state: latest
        executable: pip3


    - name: Create Flask App Directory
      file:
        path: "/home/flask-app/"
        state: directory

    - name: Copy app.py to webservers
      template:
        src: application.py
        dest: "/home/flask-app/app.py"

    - name: Create flask app Service
      template:
        src: flask_app.service.j2
        dest: /etc/systemd/system/flask_app.service
      notify:
        - Reload Systemd

    - name: Start and Enable flask app service
      systemd:
        name: flask_app.service
        state: started
        enabled: yes

  handlers:
    - name: Reload Systemd
      systemd:
        daemon_reload: yes
